// Configuration file generated by OpenXsensor Configurator v2.0 the: 08-11-2014
// !! This file is only compatible with version v2.x of OpenXsensor !!

#ifndef OXS_CONFIG_h
#define OXS_CONFIG_h
// OpenXsensor https://code.google.com/p/openxsensor/
// started by Rainer SchloÃŸhan

//**** 1 FrSky device ID when Sport protocol is used 
#define SENSOR_ID    0x1B

//**** 2 Hardware settings
//****** 2.1 Digital pins
#define PIN_SERIALTX         4     // The pin to transmit the serial data to the frsky telemetry enabled receiver
#define PIN_PPM              2     // Arduino can read a PPM Signal coming from Tx.
#define PPM_MIN_100          988   //    1500 - 512 ; // pulse width (usec) when TX send a channel = -100
#define PPM_PLUS_100         2012  //    1500 + 512 ; // pulse width (usec) when TX send a channel = +100
#define PIN_PUSHBUTTON       10    // check if a button has been pushed.
#define PIN_ANALOG_VSPEED    3     //  the pin used to write the vertical speed to the Rx A1 or A2 pin

//****** 2.2 Analog Pins for voltages
#define PIN_VOLTAGE_1    0
#define PIN_VOLTAGE_2    1
//#define PIN_VOLTAGE_3
#define PIN_VOLTAGE_4    3
#define PIN_VOLTAGE_5    6
#define PIN_VOLTAGE_6    7

//****** 2.3 Analog pin used for current sensor
#define PIN_CURRENTSENSOR    2

//#define USE_INTERNAL_REFERENCE    // Select the voltage reference, uncomment the line to activate the internal 1.1v voltage reference
#define ARDUINOVCC             5.00  // Specify the VCC voltage of the arduino to correctly read ADC values

// -------- VARIO --------
#define VARIO                     // set as comment if there is no vario

#define SENSITIVITY_MIN 50
#define SENSITIVITY_MAX 50
#define VSPEED_MIN 20
#define VSPEED_MAX 100

#define PIN_PPM                2  // Arduino can read a PPM Signal coming from Tx. This allows to change the vario sensitivity using a pot or a switch on TX.

#define PPM_RANGE_MIN 988
#define PPM_RANGE_MAX 2012
#define SENSITIVITY_PPM_MIN 20
#define SENSITIVITY_PPM_MAX 100

#define VARIOHYSTERESIS 5

#define PIN_AnalogClimbRate 3  //  the pin used to write the vertical speed to the Rx A1 or A2 pin (can be 3 or 11 because it has to use timer 2)

#define OutputClimbRateMin -3
#define OutputClimbRateMax 3

// -------- Voltage --------

#define offset_1             0                                       // offset in mv
#define mVoltPerStep_1       ( ARDUINOVCC * 1000.0 / 1024.0 * 1.00 )  // => last number is the divider factor
#define offset_2             0                                       // offset in mv
#define mVoltPerStep_2       ( ARDUINOVCC * 1000.0 / 1024.0 * 1.00 )  // => last number is the divider factor
#define offset_3             0                                       // offset in mv
#define mVoltPerStep_3       1  
#define offset_4             0                                       // offset in mv
#define mVoltPerStep_4       ( ARDUINOVCC * 1000.0 / 1024.0 * 1.00 )  // => last number is the divider factor
#define offset_5             0                                       // offset in mv
#define mVoltPerStep_5       ( ARDUINOVCC * 1000.0 / 1024.0 * 1.00 )  // => last number is the divider factor
#define offset_6             0                                       // offset in mv
#define mVoltPerStep_6       ( ARDUINOVCC * 1000.0 / 1024.0 * 1.00 )  // => last number is the divider factor

#define NUMBEROFCELLS 0  // keep this line but set value to 0 (zero) if you do not want to transmit cell voltage.

#define PIN_CurrentSensor          2       // The Analog pin the optional current Sensor is connected to
#define mAmpPerStep                147.96   // INA282 with 0.1 ohm shunt gives 5000mv/A 
#define offsetCurrentSteps         27      // 66mv offset (set to zero for now)
// ----------- RPM sensor -----------
#define MEASURE_RPM   1


// ----------------------------- HUB telemetry data list ---------------------------------
// This is the list of all (main) telemetry fields supported by Hub protocol
// You can use code from this list when you define in which telemetry field a measurement has to be transmitted
//     Do not modify this list

#define FRSKY_USERDATA_GPS_ALT_B       0x01
#define FRSKY_USERDATA_TEMP1           0x02
#define FRSKY_USERDATA_RPM             0x03
#define FRSKY_USERDATA_FUEL            0x04
#define FRSKY_USERDATA_TEMP2           0x05
#define FRSKY_USERDATA_CELL_VOLT       0x06
#define FRSKY_USERDATA_GPS_ALT_A       0x09
#define FRSKY_USERDATA_BARO_ALT_B      0x10
#define FRSKY_USERDATA_GPS_SPEED_B     0x11
#define FRSKY_USERDATA_GPS_LONG_B      0x12
#define FRSKY_USERDATA_GPS_LAT_B       0x13
#define FRSKY_USERDATA_GPS_CURSE_B     0x14
#define FRSKY_USERDATA_GPS_DM          0x15
#define FRSKY_USERDATA_GPS_YEAR        0x16
#define FRSKY_USERDATA_GPS_HM          0x17
#define FRSKY_USERDATA_GPS_SEC         0x18
#define FRSKY_USERDATA_GPS_SPEED_A     0x19
#define FRSKY_USERDATA_GPS_LONG_A      0x1A
#define FRSKY_USERDATA_GPS_LAT_A       0x1B
#define FRSKY_USERDATA_GPS_CURSE_A     0x1C
#define FRSKY_USERDATA_BARO_ALT_A      0x21
#define FRSKY_USERDATA_GPS_LONG_EW     0x22
#define FRSKY_USERDATA_GPS_LAT_EW      0x23
#define FRSKY_USERDATA_ACC_X           0x24
#define FRSKY_USERDATA_ACC_Y           0x25
#define FRSKY_USERDATA_ACC_Z           0x26
#define FRSKY_USERDATA_CURRENT         0x28
#define FRSKY_USERDATA_VERT_SPEED      0x30 // openTX Vario Mode Only
#define FRSKY_USERDATA_ALT_MIN         0x31 // openTX Vario Mode Only
#define FRSKY_USERDATA_ALT_MAX         0x32 // openTX Vario Mode Only
#define FRSKY_USERDATA_RPM_MAX         0x33 // openTX Vario Mode Only
#define FRSKY_USERDATA_T1_MAX          0x34 // openTX Vario Mode Only
#define FRSKY_USERDATA_T2_MAX          0x35 // openTX Vario Mode Only
#define FRSKY_USERDATA_GPS_SPEED_MAX   0x36 // openTX Vario Mode Only
#define FRSKY_USERDATA_GPS_DIS_MAX     0x37 // openTX Vario Mode Only
#define FRSKY_USERDATA_VFAS_NEW        0x39 // openTX Vario Mode Only
#define FRSKY_USERDATA_VOLTAGE_B       0x3A
#define FRSKY_USERDATA_VOLTAGE_A       0x3B
#define FRSKY_USERDATA_GPS_DIST        0x3C
#define FRSKY_USERDATA_FUELPERCENT     0x3D
// End of list of all telemetry fields supported by Hub protocol (defined by Frsky)

// ---------------------------- SMART PORT telemetry data list ------------------------------
// This is the list of all (main) telemetry fields supported by SPORT
// Note : some of those values may not (yet) be displayed on Taranis
// You can use code from this list when you define in which telemetry field a measurement has to be transmitted
//     Do not modify this list

//#define RSSI_ID            0xf101  // please do not use this code because it is already used by the receiver
//#define ADC1_ID            0xf102  // please do not use this code because it is already used by the receiver
#define ADC2_ID            0xf103
#define BATT_ID            0xf104
//#define SWR_ID             0xf105   // please do not use this code because it is already used by the receiver
#define T1_FIRST_ID        0x0400
#define T1_LAST_ID         0x040f
#define T2_FIRST_ID        0x0410
#define T2_LAST_ID         0x041f
#define RPM_FIRST_ID       0x0500
#define RPM_LAST_ID        0x050f
#define FUEL_FIRST_ID      0x0600
#define FUEL_LAST_ID       0x060f
#define ALT_FIRST_ID       0x0100
#define ALT_LAST_ID        0x010f
#define VARIO_FIRST_ID     0x0110
#define VARIO_LAST_ID      0x011f
#define ACCX_FIRST_ID      0x0700
#define ACCX_LAST_ID       0x070f
#define ACCY_FIRST_ID      0x0710
#define ACCY_LAST_ID       0x071f
#define ACCZ_FIRST_ID      0x0720
#define ACCZ_LAST_ID       0x072f
#define CURR_FIRST_ID      0x0200
#define CURR_LAST_ID       0x020f
#define VFAS_FIRST_ID      0x0210
#define VFAS_LAST_ID       0x021f
#define GPS_SPEED_FIRST_ID 0x0830
#define GPS_SPEED_LAST_ID  0x083f
#define CELLS_FIRST_ID     0x0300
#define CELLS_SECOND_ID    0x0301
#define CELLS_THIRD_ID     0x0302
#define CELLS_LAST_ID      0x030f
// End of list of all telemetry fields supported by SPORT  (defined by Frsky)

// ---------------------------- Default field ------------------------------
#define DEFAULTFIELD             0x00

// ---------------------------- Transmitted data list ------------------------------
//  This is the list of codes for each available measurement
//  Use those codes when you define which data has to be transmitted
//  Do not change those values

enum DataToTransmit {
    ALTIMETER = 1,            // DEFAULTFIELD can be used in SPORT protocol (is then the same as ALT_FIRST_ID);  it MUST be used in Hub protocol because meters and centimeters are sent in different fileds
    VERTICAL_SPEED,           // DEFAULTFIELD can be used
    SENSITIVITY,              // DEFAULTFIELD can NOT be used
    ALT_OVER_10_SEC,          // DEFAULTFIELD can NOT be used ; this is the difference of altitude over the last 10 sec (kind of averaging vertical speed)
                              // there is no telemetry field for this; it is possible to use e.g. T1 or T2; then you can use a custom function "play value" on Tx side
    VOLT1,                    // DEFAULTFIELD can NOT be used
    VOLT2,                    // DEFAULTFIELD can NOT be used
    VOLT3,                    // DEFAULTFIELD can NOT be used
    VOLT4,                    // DEFAULTFIELD can NOT be used
    VOLT5,                    // DEFAULTFIELD can NOT be used
    VOLT6,                    // DEFAULTFIELD can NOT be used
    CURRENTMA,                // DEFAULTFIELD can be used
    MILLIAH,                  // if value must be sent as percentage, then uncomment the line "#define SEND_mAhPercentageAsFuel 4000"
    CELLS_1_2,                // Only DEFAULTFIELD can be used
    CELLS_3_4,                // Only DEFAULTFIELD can be used
    CELLS_5_6,                // Only DEFAULTFIELD can be used
    RPM,                      // Only DEFAULTFIELD can be used
} ;  // End of list of type of available measurements

// ---------------------------- Transmitted data setting ------------------------------

#define SETUP_DATA_TO_SEND    \
                        FRSKY_USERDATA_ACC_X , VOLT1 , 1 , 1 , 0 , \
                        FRSKY_USERDATA_ACC_Y , VOLT2 , 1 , 1 , 0 , \
                        DEFAULTFIELD , CURRENTMA , 1 , 1 , 0 , \
                        FRSKY_USERDATA_TEMP1 , VOLT4 , 1 , 1 , 0 , \
                        FRSKY_USERDATA_TEMP2 , VOLT5 , 1 , 1 , 0 , \
                        FRSKY_USERDATA_RPM , VOLT6 , 1 , 1 , 0 , \
                        DEFAULTFIELD , VERTICAL_SPEED , 1 , 1 , 0

// ---------------------------- Other parameters ------------------------------

// There is normally no reason to change the 2 next parameters
#define I2CAdd           0x77  // 0x77 The I2C Address of the MS5611 breakout board
                               // (normally 0x76 or 0x77 configured on the MS5611 module

#define PIN_LED            13  // The Signal LED (default=13=onboard LED)


#endif// End define OXS_CONFIG_h
