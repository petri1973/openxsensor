// Configuration file generated by OpenXsensor Configurator v2.0 the: 14-11-2014
// !! This file is only compatible with version v2.x of OpenXsensor !!

// OpenXsensor https://code.google.com/p/openxsensor/
// started by Rainer SchloÃŸhan

//***********************************************************************************************************************
// Another file in this project (see oxs_config_description.h) provides detailed explanations on how to set up this file.
//***********************************************************************************************************************

#ifndef OXS_CONFIG_h
#define OXS_CONFIG_h

// --------- 1 - FrSky device ID when Sport protocol is used ---------
#define SENSOR_ID    0x1B

// --------- 2 - Serial data pin choice ---------
#define PIN_SERIALTX    4     // The pin which transmits the serial data to the FrSky telemetry enabled receiver

// --------- 3 - PPM settings ---------
#define PIN_PPM         2       // Arduino can read a PPM Signal coming from Tx. This allows to change the vario sensitivity using a pot or a switch on TX.
#define PPM_MIN_100     988     // 1500 - 512 ; pulse width (usec) when TX sends a channel = -100
#define PPM_PLUS_100    2012    // 1500 + 512 ; pulse width (usec) when TX sends a channel = +100

// --------- 4 - Vario settings ---------

// ***** 4.1 - Connecting 1 or 2 MS5611 barometric sensor *****
#define VARIO                   // set as comment if there is no vario
//#define VARIO2                // set as comment if there is no second vario

// ***** 4.2 - Sensitivity predefined by program *****
#define SENSITIVITY_MIN       50
#define SENSITIVITY_MAX       50
#define SENSITIVITY_MIN_AT    20
#define SENSITIVITY_MAX_AT    100

// ***** 4.3 - Sensitivity adjusted from the TX *****
#define SENSITIVITY_MIN_AT_PPM    10   // sensitivity will be changed by OXS only when PPM signal is between the specified range enlarged by -5/+5
#define SENSITIVITY_MAX_AT_PPM    40
#define SENSITIVITY_PPM_MIN       20   // common value for vario is 20
#define SENSITIVITY_PPM_MAX       100  // common value for vario is 100

// ***** 4.4 - Hysteresis parameter *****
#define VARIOHYSTERESIS    5

// ***** 4.5 - Vertical speeds calculations *****
#define VARIO_PRIMARY              0    // 0 means first ms5611, 1 means second ms5611 , 2 means vario based on vario 1 + compensation from airspeed
#define VARIO_SECONDARY            0    // 0 means first ms5611, 1 means second ms5611 , 2 means vario based on vario 1 + compensation from airspeed
#define SWITCH_VARIO_MIN_AT_PPM    10
#define SWITCH_VARIO_MAX_AT_PPM    90

// ***** 4.6 - Analog vertical speed *****
#define PIN_ANALOG_VSPEED    3  // the pin used to write the vertical speed to the Rx A1 or A2 pin (can be 3 or 11 because it has to use timer 2)
#define ANALOG_VSPEED_MIN    -3
#define ANALOG_VSPEED_MAX    3

// --------- 5 - Airspeed settings ---------
//#define AIRSPEED    MS4525

#define AIRSPEED_RESET_AT_PPM      100

#define COMPENSATION_MIN_AT_PPM    60
#define COMPENSATION_MAX_AT_PPM    90
#define COMPENSATION_PPM_MIN       80
#define COMPENSATION_PPM_MAX       140

// --------- 6 - Voltages & Current sensor settings ---------

// ***** 6.1 - Voltage Reference selection (VCC or 1.1V internal) *****
//#define USE_INTERNAL_REFERENCE    // Select the voltage reference, uncomment the line to activate the internal 1.1v voltage reference
#define ARDUINOVCC             5.00  // Specify the VCC voltage of the arduino to correctly read ADC values

// ***** 6.2 - Voltages Analog Pins *****
#define PIN_VOLTAGE_1    0
#define PIN_VOLTAGE_2    1
//#define PIN_VOLTAGE_3
#define PIN_VOLTAGE_4    3
#define PIN_VOLTAGE_5    6
#define PIN_VOLTAGE_6    7

// ***** 6.3 - Voltage measurements calibration parameters *****
#define OFFSET_1             0                                        // offset in mv
#define MVOLT_PER_STEP_1     ( ARDUINOVCC * 1000.0 / 1024.0 * 1.00 )  // => last number is the divider factor
#define OFFSET_2             0                                        // offset in mv
#define MVOLT_PER_STEP_2     ( ARDUINOVCC * 1000.0 / 1024.0 * 1.00 )  // => last number is the divider factor
#define OFFSET_3             0
#define MVOLT_PER_STEP_3     1
#define OFFSET_4             0                                        // offset in mv
#define MVOLT_PER_STEP_4     ( ARDUINOVCC * 1000.0 / 1024.0 * 1.00 )  // => last number is the divider factor
#define OFFSET_5             0                                        // offset in mv
#define MVOLT_PER_STEP_5     ( ARDUINOVCC * 1000.0 / 1024.0 * 1.00 )  // => last number is the divider factor
#define OFFSET_6             0                                        // offset in mv
#define MVOLT_PER_STEP_6     ( ARDUINOVCC * 1000.0 / 1024.0 * 1.00 )  // => last number is the divider factor

// ***** 6.4 - Number of Lipo cells to measure (and transmit to Tx) *****
#define NUMBEROFCELLS    2

// ***** 6.5 - Current sensor analog pin *****
#define PIN_CURRENTSENSOR    2

// ***** 6.6 - Current sensor calibration parameters *****
#define OFFSET_CURRENT_STEPS         27      // 66mv offset (set to zero for now)
#define MAMP_PER_STEP                147.96   // INA282 with 0.1 ohm shunt gives 5000mv/A 

// --------- 7 - RPM (rotations per minute) settings ---------
#define MEASURE_RPM

// --------- 8 - Persistent memory settings ---------
#define SAVE_TO_EEPROM            // Some telemetry values will be stored in EEProm every 10 seconds.
#define PIN_PUSHBUTTON       10

// --------- 9 - Data to transmit ---------
// General set up to define which measurements are transmitted and how

#define SETUP_DATA_TO_SEND    \
                        AccX , VOLT1 , 1 , 1 , 0 , \
                        AccY , VOLT2 , 1 , 1 , 0 , \
                        DEFAULTFIELD , CURRENTMA , 1 , 1 , 0 , \
                        T1 , VOLT4 , 1 , 1 , 0 , \
                        T2 , VOLT5 , 1 , 1 , 0 , \
                        Rpm , VOLT6 , 1 , 1 , 0 , \
                        DEFAULTFIELD , VERTICAL_SPEED , 1 , 1 , 0 , \
                        DEFAULTFIELD , CELLS_1_2 , 1 , 1 , 0

// --------- 10 - Reserved for developer. DEBUG must be activated here when we want to debug one or several functions in some other files. ---------
//#define DEBUG

#ifdef DEBUG
#include "HardwareSerial.h"
#endif

#endif// End define OXS_CONFIG_h